import * as tsModule from "typescript";
import { ComponentFeature } from "./component-feature-cb6a2ade";
import { VisibilityKind } from "./visibility-kind-8314091f";
import { TransformerKind } from "./transformer-kind-cc0d5aa9";
declare function cli(): Promise<void>;
interface AnalyzerCliConfig {
    glob?: string[];
    dry?: boolean;
    verbose?: boolean;
    silent?: boolean;
    outFile?: string;
    outFiles?: string;
    outDir?: string;
    format?: TransformerKind;
    visibility?: VisibilityKind;
    features?: ComponentFeature[];
    discoverLibraryFiles?: boolean;
    analyzeGlobalFeatures?: boolean;
    markdown?: {
        headerLevel?: number;
    };
    ts?: typeof tsModule;
    cwd?: string;
}
type CliCommand = (config: AnalyzerCliConfig) => Promise<void> | void;
declare const analyzeCliCommand: CliCommand;
declare function analyzeAndTransformGlobs(inputGlobs: string | string[], config: AnalyzerCliConfig): Promise<string>;
export { cli, AnalyzerCliConfig, analyzeCliCommand, analyzeAndTransformGlobs };
//# sourceMappingURL=cli.d.ts.map